https://codesandbox.io/s/485rw80y0

bottom close
  ver1
    https://codesandbox.io/s/1v7pwk5q3j
  ver2
    https://codesandbox.io/s/4z306q23zx
  ver3
    edit
      https://codesandbox.io/s/k56v4yr0no
    preview
      https://codesandbox.io/embed/k56v4yr0no

Drawer
  edit
    https://codesandbox.io/s/yn1z37n4x
  preview
    https://codesandbox.io/embed/yn1z37n4x

reactでやるか、html構成を変更して、cssでまとめるか
でないと、openフラグのclassをいくつも書いて、jsでdomゴリゴリになる。。。


https://codesandbox.io/embed/ko89on1k13?codemirror=1
リファクタ
edit
https://codesandbox.io/s/6j1p4vko7w
preview
https://codesandbox.io/embed/6j1p4vko7w




info
https://frontendfront.com/
http://b.hatena.ne.jp/hotentry/it/IT
http://www.echojs.com/
https://medium.com/dailyjs
https://jser.info/

php
https://www.phpied.com/installing-v8js-for-php-on-a-mac/

frontend-dev-bookmarks
https://github.com/dypsilon/frontend-dev-bookmarks/blob/master/architecture/design-patterns.md

The best of JavaScript, HTML and CSS
https://bestofjs.org/

わかりやすいREADME.mdを書く
https://deeeet.com/writing/2014/07/31/readme/

フロントエンドチェックリスト
https://qiita.com/miya0001/items/8fff46c201bf9eaeba4a

MVI
https://r7kamura.hatenablog.com/entry/2015/10/07/071900

jQueryはNGと言われた時の便利なメソッド
https://qiita.com/hiroki_y/items/0009a56b88f919d6ea46

en
うまくメソッド名を付けるための参考情報
https://qiita.com/KeithYokoma/items/2193cf79ba76563e3db6
プログラミングでよく使う英単語のまとめ
https://qiita.com/Ted-HM/items/7dde25dcffae4cdc7923
https://oxynotes.com/?p=8679
git commit
https://qiita.com/gogotanaka/items/b65e1b081fa976e5d754
class
https://qiita.com/manabuyasuda/items/dbb76ed36970bec95470
http://css-happylife.com/archives/2007/0115_1345.php
https://qiita.com/pugiemonn/items/eaa597b79fe59a1f1506
Naming -名前付け-
https://qiita.com/Koki_jp/items/f3d3e824f98d182d4100#%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E5%90%8D%E3%81%AF%E5%8B%95%E8%A9%9E%E3%81%8B%E3%82%89%E5%A7%8B%E3%82%81%E3%82%8B

styleguide
example
https://marvelapp.com/styleguide/overview/introduction
スタイルガイドとパターンライブラリの違い
https://parashuto.com/rriver/development/difference-between-styleguide-and-pattern-library
https://uxmilk.jp/69278
UI Details
https://twitter.com/i/moments/880688233641848832

anime
https://www.flapism.jp/html/416/
https://easings.net/ja#

material color
https://www.materialui.co/flatuicolors

ux
https://uxdesign.cc/good-to-great-ui-animation-tips-7850805c12e5

atomic
https://design.dena.com/design/atomic-design-%E3%82%92%E5%88%86%E3%81%8B%E3%81%A3%E3%81%9F%E3%81%A4%E3%82%82%E3%82%8A%E3%81%AB%E3%81%AA%E3%82%8B/
https://blog.spacemarket.com/code/atomic-design%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6react%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%82%92%E5%86%8D%E8%A8%AD%E8%A8%88%E3%81%97%E3%81%9F%E8%A9%B1/
atomic styled component
https://qiita.com/taneba/items/4547830b461d11a69a20

https://dribbble.com/aureliensalomon

code review
https://medium.com/@laqiiz/%E3%82%B3%E3%83%BC%E3%83%89%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E3%83%AC%E3%83%93%E3%83%A5%E3%82%A2%E3%83%BC%E5%81%B4%E3%81%AE%E3%82%A2%E3%83%B3%E3%83%81%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3-effdcc39da52
http://please-sleep.cou929.nu/code-review-essence-from-cookpad.html
https://techlife.cookpad.com/entry/2018/06/19/110000

css module
https://restishistory.net/blog/how-to-structure-your-css-better-as-components.html
modern js
https://github.com/mbeaudru/modern-js-cheatsheet
clean code
https://qiita.com/rana_kualu/items/eb40f17917d70cb0d3d1
https://github.com/mitsuruog/clean-code-javascript/
no react
https://medium.com/dailyjs/the-deepest-reason-why-modern-javascript-frameworks-exist-933b86ebc445
state managing
http://krasimirtsonev.com/blog/article/managing-state-in-javascript-with-state-machines-stent
no if
https://www.seleqt.net/programming/eliminatetheswitchstatementforbettercode/
no comment
https://www.hassy-blog.com/entry/how_to_write_code_without_comments/



/* eslint-disable */
console.log(location.href)

const baseURL = location.href

// match, equals
/*
* match  マッチ、含む
* equals 完全一致
*/
const hide = [
  {
    url: "http://localhost:8080/aaa",
    match: "match",
  },
  {
    url: "http://test.com/eee",
    match: "equals",
  },
  {
    url: "http://test.com/fff",
    match: "equals",
  },
]

// .* > 存在しなくてもよい
// .+ > なにかしら文字列が必要 一文字以上の任意の文字列
const show = [
  {
    url: "http://localhost:8080/aaa/",
    match: "equals",
    pattern: "a",
  },
  {
    url: "http://localhost:8080/bbb/",
    match: "equals",
    pattern: "b",
  },
  {
    url: "http://localhost:8080/.+",
    match: "match",
    pattern: "c",
  },
]

// const hideTarget = hide.some(url => {
//   console.log(url)
//   console.log(new RegExp(url))
//   console.log(new RegExp(url).test(baseURL))
//   return new RegExp(url).test(baseURL)
// })
// console.log(hideTarget)

const target = show.filter(obj => {
  if (obj.match === "equals") {
    return obj.url === baseURL
  } else if (obj.match === "match") {
    return new RegExp(obj.url).test(baseURL)
  }
  return false
})

console.log(target.length)

if (!target.length || target.length >= 2) {
  console.log("target none or multi")
  // return
}

const showObj = target[0]

console.log(showObj)
